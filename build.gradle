
// This plugin's version (typically must match that of ES).
version = '7.5.0'
group = 'org.carrot2'

buildscript {
    ext {
        // ES version we depend upon/ compile against.
        version_es = '7.5.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:" + version_es
    }
}

ext {
  isInternal = false
} 

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'elasticsearch.testclusters'
apply plugin: 'elasticsearch.esplugin'

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'

apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-scm'

ext {
  projectSubstitutions = [:]
  licenseFile = rootProject.file('LICENSE.txt')
  noticeFile = rootProject.file('NOTICE.txt')
}

esplugin {
    name 'elasticsearch-carrot2'
    description 'Search results clustering plugin for ElasticSearch (Carrot2-based)'
    classname 'org.carrot2.elasticsearch.ClusteringPlugin'
}

// We don't have unit tests, only integration tests.
test.enabled = false

testingConventions {
  enabled = true
}

integTest {
  runner {
    systemProperty 'tests.security.manager', 'false'
  }
}

testClusters.integTest {
  // extraConfigFile doesn't allow directories, only files, so we need to add each individually
  fileTree(dir: 'src/main/config').each { File file -> 
    extraConfigFile 'elasticsearch-carrot2/' + file.name, file
  }
}

licenseHeaders.enabled = false
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false

repositories {
    mavenLocal()
    mavenCentral()
}

// esplugin forces transitive:false on all dependencies
// so list all transitive dependencies individually
dependencies {
    compile "org.carrot2:carrot2-mini:3.16.1"
    compile "com.carrotsearch.thirdparty:simple-xml-safe:2.7.1"
    compile "com.carrotsearch:hppc:0.8.1"
    compile "org.carrot2.attributes:attributes-binder:1.3.3"
    compile "org.carrot2.shaded:carrot2-guava:18.0"
    compile "org.apache.commons:commons-lang3:3.5"
    compile "com.fasterxml.jackson.core:jackson-core:2.8.11"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.8.11"
    compile "com.fasterxml.jackson.core:jackson-databind:2.8.11"
    compile "org.slf4j:slf4j-api:1.7.13"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.11.1"
    compile "org.carrot2:morfologik-stemming:2.1.5"
    compile "org.carrot2:morfologik-fsa:2.1.5"

    testCompile "org.assertj:assertj-core:3.12.0"
    testCompile "org.elasticsearch.client:transport:" + version_es

    testCompile "org.apache.httpcomponents:httpclient:${versions.httpclient}"
    testCompile "org.apache.httpcomponents:httpcore:${versions.httpcore}"
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

project.gradle.taskGraph.whenReady { taskGraph ->
  if (taskGraph.allTasks.any { it.name == 'uploadArchives' }) {
    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: nexusUsername, password: nexusPassword)
          }

          snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            authentication(userName: nexusUsername, password: nexusPassword)
          }

          pom.project {
            name 'Search results clustering plugin for Elasticsearch (Carrot2-based)'
            packaging 'zip'
            artifactId 'elasticsearch-carrot2'
            description 'Search results clustering plugin for Elasticsearch (Carrot2-based)'
            url 'https://github.com/carrot2/elasticsearch-carrot2'

            scm {
              connection 'scm:git:https://github.com/carrot2/elasticsearch-carrot2'
              developerConnection 'scm:git:git@github.com:carrot2/elasticsearch-carrot2.git'
              url 'https://github.com/carrot2/elasticsearch-carrot2'
            }

            licenses {
              license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              }
            }

            developers {
              developer {
                id 'dawid.weiss'
                name 'Dawid Weiss'
                email 'dawid.weiss@carrotsearch.com'
              }
              developer {
                id 'stanislaw.osinski'
                name 'Stanisław Osiński'
                email 'stanislaw.osinski@carrotsearch.com'
              }
            }        
          }
        }
      }
    }
  }
}
